# microservice specific routes

->          /hmrc-frontend                                    hmrcfrontend.Routes

->          /error                                            error.Routes

GET         /assets/*file                                     controllers.Assets.versioned(path="/public", file: Asset)

GET         /refresh-session                                  controllers.KeepAliveController.keepAlive()

GET         /there-is-a-problem                               controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET         /account/signed-out                               controllers.auth.SignedOutController.signedOutNotSaved()
GET         /account/signed-out-saved                         controllers.auth.SignedOutController.signedOutSaved()
GET         /account/sign-out                                 controllers.auth.SignedOutController.signOut(becauseOfTimeout: Boolean ?= false)

GET         /trader/:ern/movement/:arc                        controllers.IndexController.onPageLoad(ern: String, arc: String)
POST        /trader/:ern/movement/:arc                        controllers.IndexController.onSubmit(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/draft-change         controllers.TaskListController.onPageLoad(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/check-answers          controllers.CheckYourAnswersController.onPageLoad(ern: String, arc: String)
POST        /trader/:ern/movement/:arc/check-answers          controllers.CheckYourAnswersController.onSubmit(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/confirmation           controllers.ConfirmationController.onPageLoad(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/declaration            controllers.DeclarationController.onPageLoad(ern: String, arc: String)
POST        /trader/:ern/movement/:arc/declaration            controllers.DeclarationController.onSubmit(ern: String, arc: String)

->          /                                                 info.Routes
->          /                                                 movement.Routes
->          /                                                 consignee.Routes
->          /                                                 journeyType.Routes
->          /                                                 transportArranger.Routes
->          /                                                 transportUnit.Routes
->          /                                                 firstTransporter.Routes
->          /                                                 exportInformation.Routes
->          /                                                 destination.Routes
->          /                                                 guarantor.Routes

